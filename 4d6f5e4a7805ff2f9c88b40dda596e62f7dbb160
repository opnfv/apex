{
  "comments": [
    {
      "key": {
        "uuid": "9a91bd0f_9a824aff",
        "filename": "build/network-environment.yaml.jinja2",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 334
      },
      "writtenOn": "2016-05-17T21:37:00Z",
      "side": 1,
      "message": "seems like for these entires that are either \u003cvalue\u003e or noop, you could just get rid of the if statement, and use a variable to make it a single line",
      "range": {
        "startLine": 10,
        "startChar": 2,
        "endLine": 14,
        "endChar": 14
      },
      "revId": "4d6f5e4a7805ff2f9c88b40dda596e62f7dbb160",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a91bd0f_fdd83055",
        "filename": "build/network-environment.yaml.jinja2",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 235
      },
      "writtenOn": "2016-05-18T12:50:29Z",
      "side": 1,
      "message": "The variable still has to be set somewhere, if it\u0027s done in deploy then we have to pass more variables into the template, I did it in the template because I had the values already passed in and able to make the decision here.",
      "parentUuid": "9a91bd0f_9a824aff",
      "range": {
        "startLine": 10,
        "startChar": 2,
        "endLine": 14,
        "endChar": 14
      },
      "revId": "4d6f5e4a7805ff2f9c88b40dda596e62f7dbb160",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a91bd0f_1a763a3f",
        "filename": "build/network-environment.yaml.jinja2",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 3889
      },
      "writtenOn": "2016-05-17T21:48:53Z",
      "side": 1,
      "message": "We are just setting values in this file. I wonder if it would be better if we load this file with default values as yaml (rather than a jinja2 template) using python yaml library, then simply set values using parsed network settings object. That way, we keep all the logic in our source code and we don\u0027t have to extend that out to template file.\n\nAlso, for the IP/cidr settings, we should check if those networks are enabled, and remove the keys if those networks are not enabled.",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 89,
        "endChar": 87
      },
      "revId": "4d6f5e4a7805ff2f9c88b40dda596e62f7dbb160",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a91bd0f_9ddd6445",
        "filename": "build/network-environment.yaml.jinja2",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 235
      },
      "writtenOn": "2016-05-18T12:50:29Z",
      "side": 1,
      "message": "We load the default values from the network-settings file now so all of these get the values that are passed from the default file, I\u0027ve considered doing a variable|default(\u0027def_val\u0027) syntax but I think it\u0027s valid yaml to have a blank value here so I\u0027m not sure the clutter would gain us anything.\n\nThe pyyaml idea is an interesting one, I wonder if that would work for the nic templates too?\n\nI\u0027m not so sure that it\u0027s worth our effort to remove unused values, this is a file that the end user never interacts with and will only see if they are looking for it.",
      "parentUuid": "9a91bd0f_1a763a3f",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 89,
        "endChar": 87
      },
      "revId": "4d6f5e4a7805ff2f9c88b40dda596e62f7dbb160",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a91bd0f_bdb948eb",
        "filename": "build/network-environment.yaml.jinja2",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 3889
      },
      "writtenOn": "2016-05-18T13:19:10Z",
      "side": 1,
      "message": "pyyaml would work for nic templates as well, although there, we are building a more complex structure depending on model, rather than just setting values. Eventually, I think ultimately the solution to building those files should really be yaml building with a python library that updates with TripleO. So based on network settings, we just build a yaml nic template and network-environment *without* reading anything from any file.",
      "parentUuid": "9a91bd0f_9ddd6445",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 89,
        "endChar": 87
      },
      "revId": "4d6f5e4a7805ff2f9c88b40dda596e62f7dbb160",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a91bd0f_5a7cc220",
        "filename": "lib/python/apex/net_env.py",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 334
      },
      "writtenOn": "2016-05-17T21:40:00Z",
      "side": 1,
      "message": "Why is the init gone?",
      "revId": "4d6f5e4a7805ff2f9c88b40dda596e62f7dbb160",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a91bd0f_bde2a801",
        "filename": "lib/python/apex/net_env.py",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 235
      },
      "writtenOn": "2016-05-18T12:50:29Z",
      "side": 1,
      "message": "moved its function to the load statements, there\u0027s 2 ways to instantiate the class now, one with a file and another with a pickled base64 encoded string. In that case we couldn\u0027t expect the class to be instantiated with a file which the previous init expected.\n\n__init__() here overrides the base object class\u0027 init so technically init still exists but is a pass operation.",
      "parentUuid": "9a91bd0f_5a7cc220",
      "revId": "4d6f5e4a7805ff2f9c88b40dda596e62f7dbb160",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}