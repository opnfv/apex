{
  "comments": [
    {
      "key": {
        "uuid": "9a91bd0f_d3545423",
        "filename": "build/overcloud-full.sh",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 334
      },
      "writtenOn": "2016-04-28T17:38:42Z",
      "side": 1,
      "message": "This happens before the code for adding the cpu pinning script, doesnt this need to be after?",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 53
      },
      "revId": "7e8aefb3766aa9a0190ae7b5befeb96d33d314df",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a91bd0f_5317e451",
        "filename": "build/overcloud-full.sh",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 2693
      },
      "writtenOn": "2016-04-28T19:18:08Z",
      "side": 1,
      "message": "Yes. Will fix.",
      "parentUuid": "9a91bd0f_d3545423",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 53
      },
      "revId": "7e8aefb3766aa9a0190ae7b5befeb96d33d314df",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a91bd0f_53404456",
        "filename": "ci/deploy.sh",
        "patchSetId": 1
      },
      "lineNbr": 951,
      "author": {
        "id": 334
      },
      "writtenOn": "2016-04-28T19:09:15Z",
      "side": 1,
      "message": "I think a better approach is to just update the original overcloud-full.qcow2 and do it before the image upload.  If a user then goes to deploy afterwards with a numa\u003dfalse, we just do the reverse action to undo setting the kernel boot args.",
      "range": {
        "startLine": 947,
        "startChar": 1,
        "endLine": 951,
        "endChar": 23
      },
      "revId": "7e8aefb3766aa9a0190ae7b5befeb96d33d314df",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a91bd0f_931d6c76",
        "filename": "ci/deploy.sh",
        "patchSetId": 1
      },
      "lineNbr": 951,
      "author": {
        "id": 2693
      },
      "writtenOn": "2016-04-28T19:17:31Z",
      "side": 1,
      "message": "You mean only use a single image? I added a second one since I figured control and compute are likely to have different settings - isolcpus would be different for each role and possibly each set of hardware. This was just an initial version to test that it was working, then I was going to add the ability to have different compute nodes take different isolcpus values as needed. Too complicated for first cut?",
      "parentUuid": "9a91bd0f_53404456",
      "range": {
        "startLine": 947,
        "startChar": 1,
        "endLine": 951,
        "endChar": 23
      },
      "revId": "7e8aefb3766aa9a0190ae7b5befeb96d33d314df",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a91bd0f_8e046316",
        "filename": "ci/deploy.sh",
        "patchSetId": 1
      },
      "lineNbr": 951,
      "author": {
        "id": 334
      },
      "writtenOn": "2016-04-28T20:30:27Z",
      "side": 1,
      "message": "Ah yeah I see your point.  I was thinking for OVS DPDK I need isolation on every node, because DPDK requires pinning.  Maybe for a first pass just do the entire overcloud image.  Are we going to be able to dynamically get the processor information via introspection for baremetal and alternatively scale it based on processors defined for VM deployments.  I think that is what we need.  Thoughts?",
      "parentUuid": "9a91bd0f_931d6c76",
      "range": {
        "startLine": 947,
        "startChar": 1,
        "endLine": 951,
        "endChar": 23
      },
      "revId": "7e8aefb3766aa9a0190ae7b5befeb96d33d314df",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a91bd0f_0e65b3e0",
        "filename": "ci/deploy.sh",
        "patchSetId": 1
      },
      "lineNbr": 951,
      "author": {
        "id": 2693
      },
      "writtenOn": "2016-04-29T06:10:58Z",
      "side": 1,
      "message": "What I\u0027m working on atm is having the \u0027cpu\u0027 bit in the inventory be a dict that allows some preset keys for the different uses we have for a cpu: \u0027isolcpus\u0027, \u0027ovs-dpdk\u0027,\u0027ceph-osd\u0027,\u0027libvirt\u0027 and then interpret them appropriately during image creation and deploy, so that compute/control/whatever can do different things for different settings. \n\nI\u0027ve looked at introspection and it\u0027s going to end up something like translating the above into introspection rules, getting matches, then building images with the right isolcpus after looking at which actual nodes got matched to which flavors/profiles, associating profiles with images as needed, and then booting nodes. It\u0027s not impossible but I want to get all the pieces working with just specification before I try to get the \u0027discovery\u0027 style workflow to function.",
      "parentUuid": "9a91bd0f_8e046316",
      "range": {
        "startLine": 947,
        "startChar": 1,
        "endLine": 951,
        "endChar": 23
      },
      "revId": "7e8aefb3766aa9a0190ae7b5befeb96d33d314df",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}