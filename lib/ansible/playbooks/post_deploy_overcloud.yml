---
- hosts: all
  tasks:
    - name: Bring up br-phy for OVS DPDK
      shell: ifup br-phy
      when:
        - dataplane == 'ovs_dpdk'
        - "'compute' in ansible_hostname"
      become: yes
    - name: Restart OVS Agent for DPDK
      shell: systemctl restart neutron-openvswitch-agent
      when:
        - dataplane == 'ovs_dpdk'
        - "'compute' in ansible_hostname"
        - sdn == false
    - name: SFC config workaround
      file:
        src: /etc/neutron/networking_sfc.conf
        dest: /etc/neutron/conf.d/neutron-server/networking_sfc.conf
        state: link
      become: yes
      when:
        - sfc
        - "'controller' in ansible_hostname"
    - name: Ensure ZRPCD is running
      shell: ps aux | grep zrpcd | grep -v grep
      ignore_errors: yes
      changed_when: false
      register: zrpcd_status
      failed_when: zrpcd_status.rc == 0
      when:
        - vpn
        - "'controller-0' in ansible_hostname"
    - name: VSPERF build base machine
      shell: /build_base_machine.sh
      args:
        chdir: /var/opt/vsperf/systems/
      become: yes
      when:
        - vsperf
        - "'compute-0' in ansible_hostname"
    - name: Fetch logs from node
      fetch:
        src: /var/log/messages
        dest: "{{ apex_temp_dir }}"
    - name: Tacker Fernet Keys Directory
      file:
        path: /etc/tacker/vim/fernet_keys
        state: directory
        mode: 0775
        owner: root
        group: tacker
      become: yes
      when: tacker
    - name: Restart Controller Neutron/Nova Services (Pike Workaround)
      shell: "systemctl restart {{ item }}"
      become: yes
      when:
        - "'controller' in ansible_hostname"
        - os_version == 'pike'
      with_items:
        - neutron-server
        - openstack-nova-api
        - openstack-nova-scheduler
        - openstack-nova-conductor
    - name: Restart Compute Nova Compute (Pike Workaround)
      shell: "systemctl restart openstack-nova-compute"
      become: yes
      when:
        - "'compute' in ansible_hostname"
        - os_version == 'pike'
